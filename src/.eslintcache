[{"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\index.js":"1","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\App.js":"2","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\HostComp.js":"3","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Signup.js":"4","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Movies.js":"5","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Admin.js":"6","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Login.js":"7","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Usermgmt.js":"8","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Dashboard.js":"9","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\PrivateRoute.js":"10","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Users.js":"11","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\EditUser.js":"12","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Subscriptions.js":"13","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\editMovies.js":"14","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\addMovie.js":"15","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\addmember.js":"16","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\editMember.js":"17","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\viewSubMovie.js":"18","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\contexts\\AuthContext.js":"19","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\contexts\\ContextData.js":"20","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\firebase.js":"21"},{"size":289,"mtime":1611181066123,"results":"22","hashOfConfig":"23"},{"size":148,"mtime":1609801599916,"results":"24","hashOfConfig":"23"},{"size":2512,"mtime":1616961248029,"results":"25","hashOfConfig":"23"},{"size":2606,"mtime":1616961224741,"results":"26","hashOfConfig":"23"},{"size":8548,"mtime":1616961717589,"results":"27","hashOfConfig":"23"},{"size":9920,"mtime":1611634913919,"results":"28","hashOfConfig":"23"},{"size":2115,"mtime":1611761442615,"results":"29","hashOfConfig":"23"},{"size":1450,"mtime":1611618863876,"results":"30","hashOfConfig":"23"},{"size":3036,"mtime":1616961434260,"results":"31","hashOfConfig":"23"},{"size":426,"mtime":1609106537056,"results":"32","hashOfConfig":"23"},{"size":3599,"mtime":1611613350938,"results":"33","hashOfConfig":"23"},{"size":11489,"mtime":1611623669176,"results":"34","hashOfConfig":"23"},{"size":5032,"mtime":1616962562294,"results":"35","hashOfConfig":"23"},{"size":4661,"mtime":1616961634707,"results":"36","hashOfConfig":"23"},{"size":3689,"mtime":1616961589598,"results":"37","hashOfConfig":"23"},{"size":3361,"mtime":1616961583580,"results":"38","hashOfConfig":"23"},{"size":4084,"mtime":1616961636401,"results":"39","hashOfConfig":"23"},{"size":2918,"mtime":1611632372759,"results":"40","hashOfConfig":"23"},{"size":1375,"mtime":1610862163643,"results":"41","hashOfConfig":"23"},{"size":5091,"mtime":1611761114639,"results":"42","hashOfConfig":"23"},{"size":524,"mtime":1610954975053,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"xn9wkr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\index.js",[],["94","95"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\App.js",[],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\HostComp.js",[],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Signup.js",["96","97"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Movies.js",["98","99","100","101","102","103","104","105","106","107","108","109","110"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Admin.js",["111","112","113","114","115","116","117"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { db } from \"../firebase\"\r\nimport { Card, Form, Modal } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { CounterContext } from '../contexts/ContextData'\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport Dashboard from \"./Dashboard\"\r\n\r\nexport default function Admin() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [fname, setFname] = useState(\"\")\r\n    const [checked, setChecked] = useState(false)\r\n    const [session, setSession] = useState(\"40\")\r\n    const [premissions, setPremissions] = useState([])\r\n    const [viewSubAuto, setViewSubAuto] = useState(0)\r\n    const [viewMovAuto, setViewMovAuto] = useState(0)\r\n    const history = useHistory()\r\n    const { premissionsList, countUser, setCountUser } = useContext(CounterContext)\r\n    const { currentUser } = useAuth()\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser.email.includes(\"admin\")) {\r\n            console.log(\"ok\")\r\n        }\r\n        else {\r\n            history.push(\"/\")\r\n\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (viewMovAuto == 3)\r\n        {\r\n            let arr = [...premissions]\r\n            arr.push(\"view movies\")\r\n            setPremissions(arr)\r\n    \r\n        }\r\n\r\n\r\n    }, [viewMovAuto])\r\n    useEffect(() => {\r\n\r\n        if (viewSubAuto == 3)\r\n        {\r\n            let arr = [...premissions]\r\n            arr.push(\"view subscriptions\")\r\n            setPremissions(arr)\r\n    \r\n        }\r\n\r\n\r\n    }, [viewSubAuto])\r\n\r\n\r\n\r\n\r\n    const navigate = () => {\r\n        history.push(\"/Usermgmt\")\r\n    }\r\n    const GetEmail = (e) => {\r\n        setEmail(e.target.value)\r\n\r\n    }\r\n    const GetName = (e) => {\r\n        setFname(e.target.value)\r\n    }\r\n    const addMgmt = (e) => {\r\n        setChecked(e)\r\n\r\n        if (e) {\r\n            setSession(\"60\");\r\n        }\r\n\r\n        else {\r\n            setSession(\"40\");\r\n        }\r\n\r\n    }\r\n\r\n    const addUser = async () => {\r\n        const usersRef = db.collection('users');\r\n        const snapshot = await usersRef.get();\r\n        const data = []\r\n        snapshot.forEach(doc => {\r\n            data.push(doc.data().email);\r\n\r\n\r\n        })\r\n        if (!data.includes(email)) {\r\n\r\n            const ID = data.length + 1\r\n            var today = new Date();\r\n            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            var dateTime = date + ' ' + time;\r\n\r\n            await usersRef.add({\r\n                email: email,\r\n                Full_Name: fname,\r\n                id: ID,\r\n                Created_time: dateTime,\r\n                Manager: checked,\r\n                session_time_in_min: session,\r\n                premissions: premissions,\r\n                uid: \"\"\r\n\r\n            })\r\n\r\n\r\n\r\n            alert(\"email added to the DataBase...\")\r\n            await setCountUser(countUser + 1)\r\n            history.push(\"/users\")\r\n        }\r\n        else {\r\n            console.log(\"email already in the DataBase...\")\r\n        }\r\n\r\n    }\r\n    let subFlag\r\n    if (viewSubAuto === 3) {\r\n        subFlag = true\r\n\r\n\r\n    }\r\n\r\n    let movieFlag\r\n    if (viewMovAuto === 3) {\r\n        movieFlag = true\r\n    }\r\n\r\n\r\n\r\n\r\n    const view_movies = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"view movies\")\r\n            setPremissions(arr)\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"view movies\")\r\n            setPremissions(arr)\r\n\r\n        }\r\n    }\r\n    const update_movies = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"update movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto + 1)\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"update movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto - 1)\r\n\r\n\r\n        }\r\n    }\r\n    const delete_movies = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"delete movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto + 1)\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"delete movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto - 1)\r\n\r\n\r\n        }\r\n    }\r\n    const create_movies = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"create movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto + 1)\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"create movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto - 1)\r\n\r\n        }\r\n    }\r\n    const update_subs = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"update subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto + 1)\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"update subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto - 1)\r\n\r\n        }\r\n    }\r\n    const view_subs = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"view subscriptions\")\r\n            setPremissions(arr)\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"view subscriptions\")\r\n            setPremissions(arr)\r\n\r\n        }\r\n\r\n    }\r\n    const delete_subs = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"delete subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto + 1)\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"delete subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto - 1)\r\n\r\n\r\n        }\r\n    }\r\n    const create_subs = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"create subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto + 1)\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"create subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto - 1)\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Dashboard />\r\n\r\n            <Card style={{ maxWidth: \"500px\", marginLeft: \"220px\" }}>\r\n                <Modal.Dialog>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Add New User!</Modal.Title>\r\n                    </Modal.Header>\r\n                </Modal.Dialog>\r\n                <Modal.Body>\r\n                    <Card.Body>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Enter Email address</Form.Label>\r\n                            <Form.Control placeholder=\"Enter Email...\" type=\"text\" onChange={GetEmail}></Form.Control>\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Enter Full Name</Form.Label>\r\n                            <Form.Control placeholder=\"Enter Full Name...\" type=\"text\" onChange={GetName}></Form.Control>\r\n\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Check label=\"Manager?\" type=\"checkbox\" onChange={(e) => addMgmt(e.target.checked)} ></Form.Check>\r\n                        </Form.Group>\r\n                        {\r\n                            premissionsList.map((x, index) => {\r\n                                return <Form.Group key={index} >\r\n\r\n                                    <Form.Check label={x.view_movies} checked={movieFlag} onChange={(e) => view_movies(e.target.checked)} />\r\n                                    <Form.Check label={x.update_movies} onChange={(e) => update_movies(e.target.checked)} />\r\n                                    <Form.Check label={x.delete_movies} onChange={(e) => delete_movies(e.target.checked)} />\r\n                                    <Form.Check label={x.create_movies} onChange={(e) => create_movies(e.target.checked)} />\r\n                                    <Form.Check label={x.view_subs} checked={subFlag} onChange={(e) => view_subs(e.target.checked)} />\r\n                                    <Form.Check label={x.update_subs} onChange={(e) => update_subs(e.target.checked)} />\r\n                                    <Form.Check label={x.delete_subs} onChange={(e) => delete_subs(e.target.checked)} />\r\n                                    <Form.Check label={x.create_subs} onChange={(e) => create_subs(e.target.checked)} />\r\n                                </Form.Group >\r\n                            })\r\n                        }\r\n\r\n                        <Modal.Footer>\r\n                            <a className=\"btn text-primary\" onClick={addUser}>\r\n                                <i className=\"fas fa-pencil-alt\">Add New User</i>\r\n                            </a>\r\n\r\n                            <a className=\"btn text-primary\" onClick={navigate}>\r\n                                <i className=\"fas fa-pencil-alt\">Cancel</i>\r\n                            </a>\r\n                        </Modal.Footer>\r\n                    </Card.Body>\r\n                </Modal.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Login.js",["118"],"import React, { useRef, useState,useContext } from \"react\"\r\nimport { Form, Button, Card, Alert, Modal } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { CounterContext } from '../contexts/ContextData'\r\n\r\nexport default function Login() {\r\n  const { users } = useContext(CounterContext)\r\n\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const {currentUser, login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      sessionStorage[\"users\"] = JSON.stringify(users)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ maxWidth: \"500px\", marginLeft: \"220px\" }}>\r\n        <Modal.Dialog>\r\n          <Modal.Header>\r\n            <Modal.Title>Log In</Modal.Title>\r\n          </Modal.Header>\r\n        </Modal.Dialog>\r\n        <Modal.Body>\r\n\r\n        <Card.Body>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              LogIn\r\n            </Button>\r\n            </Modal.Footer>\r\n\r\n          </Form>\r\n\r\n        </Card.Body>\r\n        </Modal.Body>\r\n\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        New User ? <Link to=\"/signup\">create Account</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Usermgmt.js",["119"],"import React, { useEffect } from 'react'\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport Dashboard from \"./Dashboard\"\r\n\r\nexport default function Usermgmt() {\r\n    const { currentUser } = useAuth()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(!currentUser.email.includes(\"admin\"))\r\n        {\r\n            history.push(\"/\")\r\n        }\r\n    }, [])\r\n    const navigate = () => {\r\n        history.push(\"/Users\")\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Dashboard/>\r\n        <div style={{marginBottom : \"400px\"}} >\r\n            <h5 style={{ marginLeft: \"425px\" }}>User Managemt</h5>\r\n            <br />\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Back to home page </Link>\r\n                <br />\r\n                <strong className=\"w-100 text-center mt-2\">Current Email </strong>{currentUser.email}\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"outline-info\" style={{ border: \"2px solid black\", marginLeft: \"5.5px\" }} onClick={() => history.push(\"/add-user\")}>add new user</Button>\r\n                <Button variant=\"outline-info\" style={{ border: \"2px solid black\", marginLeft: \"5.5px\" }} onClick={navigate} >Users List</Button>\r\n            </div>\r\n            <br />\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Dashboard.js",["120","121","122","123","124","125","126","127","128","129","130","131","132"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\PrivateRoute.js",[],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Users.js",["133","134","135"],"import React, {  useEffect ,useContext} from 'react'\r\nimport { db } from \"../firebase\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { Table } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { CounterContext } from '../contexts/ContextData'\r\nimport Dashboard from \"./Dashboard\"\r\n\r\nexport default function Users() {\r\n\r\n    const { currentUser } = useAuth()\r\n    const {users,countUser,setCountUser } = useContext(CounterContext)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (!currentUser.email.includes(\"admin\")) {\r\n            history.push(\"/\")\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const editUser = (id, doc) => {\r\n        sessionStorage[\"uid\"] = doc\r\n        sessionStorage[\"id\"] = id\r\n        history.push(`/edit-user/${doc}/${id}`)\r\n    }\r\n\r\n    const delUser = async (doc) => {\r\n        await db.collection('users').doc(doc).delete()\r\n        await users.map((item, index) => {\r\n            if (item.doc === doc) {\r\n                return users.pop(index)\r\n            }\r\n            return users\r\n\r\n        })\r\n        await setCountUser(countUser+1)\r\n\r\n        history.push(\"/users\")\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Dashboard/>\r\n\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4 text-center\" >Users Lists</h1>\r\n            </div>\r\n            <br />\r\n            <Link style={{ marginLeft: \"410px\" }} to=\"/Usermgmt\">Back to Users Managemt </Link>\r\n            <br />\r\n            <br />\r\n\r\n\r\n\r\n            <Table striped bordered hover variant=\"dark\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Full Name</th>\r\n                        <th>Email</th>\r\n                        <th>Created time</th>\r\n                        <th>session time (min)</th>\r\n                        <th>premissions</th>\r\n                        <th>User Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map(item => {\r\n\r\n                            return <>\r\n\r\n                                <tr>\r\n                                    <td>{item.Full_Name}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.Created_time}</td>\r\n                                    <td>{item.session_time_in_min}</td>\r\n                                    <td>\r\n                                        {item.premissions.map(x => {\r\n\r\n\r\n                                            return <li>{x}</li>\r\n\r\n                                        })}\r\n                                    </td>\r\n                                    <tb>\r\n                                        <a className=\"btn text-primary\" onClick={() => editUser(item.id, item.doc)}>\r\n                                            <i class=\"fa fa-pencil\" aria-hidden=\"true\">edit</i>\r\n                                        </a>\r\n\r\n                                        <a className=\"btn text-primary\" onClick={() => delUser(item.doc)}>\r\n                                            <i class=\"fa fa-pencil\" aria-hidden=\"true\">Delete</i>\r\n                                        </a>\r\n\r\n                                    </tb>\r\n                               \r\n                                </tr>\r\n                          \r\n                                </>\r\n                          })\r\n                          \r\n                        }\r\n                            </tbody>\r\n\r\n\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\EditUser.js",["136","137","138"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport {  useHistory } from \"react-router-dom\"\r\nimport { db } from \"../firebase\"\r\nimport { Form, Card, Button, Modal } from \"react-bootstrap\"\r\nimport { CounterContext } from '../contexts/ContextData'\r\nimport Dashboard from \"./Dashboard\"\r\n\r\nexport default function EditUser() {\r\n    const [data, setData] = useState([])\r\n    const [premissions, setPremissions] = useState([])\r\n    const [dataPrem, setDataPrem] = useState([])\r\n    const [email, setEmail] = useState(\"\")\r\n    const [fname, setFname] = useState(\"\")\r\n    const [viewSubAuto, setViewSubAuto] = useState(0)\r\n    const [viewMovAuto, setViewMovAuto] = useState(0)\r\n    const [checked, setChecked] = useState(false)\r\n    const [session, setSession] = useState(\"40\")\r\n    const history = useHistory()\r\n    const { premissionsList, users, countUser, setCountUser } = useContext(CounterContext)\r\n\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n\r\n\r\n        const data = []\r\n        users.forEach(doc => {\r\n            if (doc.doc == sessionStorage[\"uid\"]) {\r\n                setFname(doc.Full_Name)\r\n                setEmail(doc.email)\r\n                setChecked(doc.Manager)\r\n                setDataPrem(doc.premissions)\r\n                setPremissions(doc.premissions)\r\n                setSession(doc.session_time_in_min)\r\n\r\n                data.push(doc);\r\n            }\r\n\r\n\r\n        })\r\n        setData(data)\r\n\r\n    }, [])\r\n\r\n    const navigate = () => {\r\n        history.push(\"/users\")\r\n    }\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        await db.collection('users').doc(sessionStorage[\"uid\"]).update({\r\n            email: email, Full_Name: fname,\r\n            session_time_in_min: session,\r\n            Manager: checked,\r\n            premissions: premissions\r\n        })\r\n        setCountUser(countUser + 1)\r\n        await history.push(\"/users\")\r\n\r\n\r\n    }\r\n    const addMgmt = (e) => {\r\n        setChecked(e)\r\n\r\n        if (e) {\r\n            setSession(\"60\");\r\n        }\r\n\r\n        else {\r\n            setSession(\"40\");\r\n        }\r\n\r\n    }\r\n    const view_movies = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"view movies\")\r\n            setPremissions(arr)\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"view movies\")\r\n            setPremissions(arr)\r\n\r\n        }\r\n    }\r\n    const update_movies = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"update movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto + 1)\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"update movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto - 1)\r\n\r\n\r\n        }\r\n    }\r\n    const delete_movies = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"delete movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto + 1)\r\n\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"delete movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto - 1)\r\n\r\n\r\n        }\r\n    }\r\n    const create_movies = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"create movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto + 1)\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"create movies\")\r\n            setPremissions(arr)\r\n            setViewMovAuto(viewMovAuto - 1)\r\n\r\n        }\r\n    }\r\n    const update_subs = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"update subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto + 1)\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"update subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto - 1)\r\n\r\n        }\r\n    }\r\n    const view_subs = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"view subscriptions\")\r\n            setPremissions(arr)\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"view subscriptions\")\r\n            setPremissions(arr)\r\n\r\n        }\r\n\r\n\r\n    }\r\n    const delete_subs = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"delete subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto + 1)\r\n\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"delete subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto - 1)\r\n\r\n\r\n        }\r\n    }\r\n    const create_subs = (e) => {\r\n        if (e === true) {\r\n            let arr = [...premissions]\r\n            arr.push(\"create subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto + 1)\r\n        }\r\n        else if (e === false) {\r\n            let arr = [...premissions]\r\n            arr.pop(\"create subscriptions\")\r\n            setPremissions(arr)\r\n            setViewSubAuto(viewSubAuto - 1)\r\n\r\n\r\n        }\r\n    }\r\n    ////////////\r\n    let subFlag\r\n    if (viewSubAuto === 3) {\r\n        subFlag = true\r\n        let arr = [...premissions]\r\n        arr.push(\"view subscriptions\")\r\n    }\r\n\r\n    else {\r\n        subFlag = null\r\n        let arr = [...premissions]\r\n        arr.pop(\"view subscriptions\")\r\n    }\r\n\r\n\r\n    let movieFlag\r\n    if (viewMovAuto === 3) {\r\n        movieFlag = true\r\n    }\r\n    else {\r\n        movieFlag = null\r\n    }\r\n    ///////////////\r\n\r\n    let viewFlag\r\n    if (dataPrem.includes(\"view movies\")) {\r\n        viewFlag = true\r\n\r\n    }\r\n    let delFlag\r\n    if (dataPrem.includes(\"delete movies\")) {\r\n\r\n        delFlag = true\r\n    }\r\n    let createFlag\r\n    if (dataPrem.includes(\"create movies\")) {\r\n\r\n        createFlag = true\r\n    }\r\n    let updateFlag\r\n    if (dataPrem.includes(\"update movies\")) {\r\n        updateFlag = true\r\n    }\r\n    let viewSubFlag\r\n    if (dataPrem.includes(\"view subscriptions\")) {\r\n        viewSubFlag = true\r\n    }\r\n    let delSubFlag\r\n    if (dataPrem.includes(\"delete subscriptions\")) {\r\n        delSubFlag = true\r\n    }\r\n    let updateSubFlag\r\n    if (dataPrem.includes(\"update subscriptions\")) {\r\n        updateSubFlag = true\r\n    }\r\n    let createSubFlag\r\n    if (dataPrem.includes(\"create subscriptions\")) {\r\n        createSubFlag = true\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Dashboard/>\r\n            {\r\n                data.map(item => {\r\n                    return <>\r\n                   \r\n\r\n                        <Form style={{ maxWidth: \"500px\", marginLeft: \"220px\" }} onSubmit={handleSubmit}>\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Modal.Dialog>\r\n                                        <Modal.Header>\r\n                                            <Modal.Title>User Edit  :  {item.Full_Name}</Modal.Title>\r\n                                        </Modal.Header>\r\n                                    </Modal.Dialog>\r\n                                    <Modal.Body>\r\n                                        <Form.Group id=\"fname\">\r\n                                            <Form.Label>Full Name</Form.Label>\r\n                                            <Form.Control type=\"name\" defaultValue={item.Full_Name} onChange={(e) => setFname(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"email\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control type=\"email\" defaultValue={item.email} onChange={(e) => setEmail(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"session_time_in_min\">\r\n                                            <Form.Label>session time Out (in min)</Form.Label>\r\n                                            <Form.Control defaultValue={item.session_time_in_min} onChange={(e) => setSession(e.target.value)} />\r\n                                        </Form.Group>\r\n                                        <Form.Group id=\"timeCreated\">\r\n                                            <Form.Label>Created Time</Form.Label>\r\n                                            <Form.Control value={item.Created_time} />\r\n                                        </Form.Group>\r\n                                        <Form.Group >\r\n                                            <Form.Check label=\"Manager?\" defaultChecked={item.Manager} type=\"checkbox\" onChange={(e) => addMgmt(e.target.checked)} ></Form.Check>\r\n                                        </Form.Group>\r\n                                        {\r\n                                            premissionsList.map((x, index) => {\r\n                                                return <Form.Group key={index} >\r\n\r\n                                                    <Form.Check label={x.view_movies} defaultChecked={viewFlag} checked={movieFlag} onChange={(e) => view_movies(e.target.checked)} />\r\n                                                    <Form.Check label={x.update_movies} defaultChecked={updateFlag} onChange={(e) => update_movies(e.target.checked)} />\r\n                                                    <Form.Check label={x.delete_movies} defaultChecked={delFlag} onChange={(e) => delete_movies(e.target.checked)} />\r\n                                                    <Form.Check label={x.create_movies} defaultChecked={createFlag} onChange={(e) => create_movies(e.target.checked)} />\r\n                                                    <Form.Check label={x.view_subs} defaultChecked={viewSubFlag} checked={subFlag} onChange={(e) => view_subs(e.target.checked)} />\r\n                                                    <Form.Check label={x.update_subs} defaultChecked={updateSubFlag} onChange={(e) => update_subs(e.target.checked)} />\r\n                                                    <Form.Check label={x.delete_subs} defaultChecked={delSubFlag} onChange={(e) => delete_subs(e.target.checked)} />\r\n                                                    <Form.Check label={x.create_subs} defaultChecked={createSubFlag} onChange={(e) => create_subs(e.target.checked)} />\r\n                                                </Form.Group >\r\n                                            })\r\n                                        }\r\n                                        <Modal.Footer>\r\n\r\n                                            <Button  type=\"submit\">Update User info</Button>\r\n                                            <Button style={{ marginLeft: \"10px\" }} type=\"submit\" onClick={navigate}>Cancel</Button>\r\n\r\n                                        </Modal.Footer>\r\n                                    </Modal.Body>\r\n                                </Card.Body>\r\n\r\n                            </Card>\r\n                        </Form>\r\n\r\n\r\n\r\n                    </>\r\n                })\r\n            }\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\Subscriptions.js",["139","140","141","142","143","144","145","146","147","148","149","150"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\editMovies.js",["151","152","153","154"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\addMovie.js",["155","156"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\addmember.js",["157","158","159"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\editMember.js",["160","161","162","163","164"],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\components\\viewSubMovie.js",["165","166","167","168","169","170","171","172","173","174","175"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Badge, Button, Table } from \"react-bootstrap\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { CounterContext } from '../contexts/ContextData'\r\n\r\n\r\nexport default function ViewSubMovie() {\r\n    const [movie, setMovie] = useState([])\r\n    const [title, setTitle] = useState(\"\")\r\n    const [Premiered, setPremiered] = useState(\"\")\r\n    const [Genres, setGenres] = useState([])\r\n    const [Image, setImage] = useState(\"\")\r\n    const history = useHistory()\r\n    const [uid, setUid] = useState(\"\")\r\n    const { movies, setCount, count } = useContext(CounterContext)\r\n    const { currentUser } = useAuth()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let arr = []\r\n        movies.forEach(doc => {\r\n            if (doc.id == sessionStorage[\"id\"]) {\r\n                arr.push(doc)\r\n                setMovie(arr)\r\n                setTitle(doc.title)\r\n                setPremiered(doc.Premiered)\r\n                setGenres(doc.Genres)\r\n                setImage(doc.Image)\r\n            }\r\n        })\r\n        console.log(\"movie has been updated in state\")\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n\r\n        <div >\r\n\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Back to home page </Link>\r\n                <br />\r\n                <strong>current Email LogIn:</strong> {currentUser.email}\r\n                <br />\r\n            </div>\r\n            <Table variant=\"hover\"  >\r\n                <thead width=\"20%\">\r\n                    <tr >\r\n                        <th style={{ backgroundColor: \"silver\" }}>Image</th>\r\n                        <th style={{ backgroundColor: \"silver\" }}>The__Movie__Name</th>\r\n                        <th style={{ backgroundColor: \"silver\" }}>Premiered,genres</th>\r\n                        <th style={{ backgroundColor: \"silver\" }}> User Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n\r\n                    movie &&\r\n                    movie.map((item, index) => {\r\n                        return <>\r\n                                    <tr >\r\n                                        \r\n                                        <td><img width=\"200\" height=\"300\"\r\n                                            src={item.Image} alt=\"this is an movie poster\"></img>\r\n                                        </td>\r\n                                        <td >{item.title}</td>\r\n                                        <td>{item.Premiered} <br/> {item.Genres + \",\"}</td>\r\n                                        <td> <Button type=\"submit\" onClick={() => history.push(\"/Subscriptions\")} >Back(Subscriptions)</Button></td>\r\n\r\n                            </tr>\r\n                            </>\r\n\r\n                    })\r\n                }\r\n                <br />\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\contexts\\AuthContext.js",[],"C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\contexts\\ContextData.js",["176","177"],"import { useState, createContext, useEffect } from 'react'\r\nimport { db } from \"../firebase\"\r\nimport axios from \"axios\"\r\n\r\nexport const CounterContext = createContext();\r\n\r\nexport function CounterContextProvider({ children }) {\r\n    const [count, setCount] = useState(0)\r\n    const [countSub, setCountSub] = useState(0)\r\n    const [countUser, setCountUser] = useState(0)\r\n\r\n    const [movies, setMovies] = useState([])\r\n    const [members, serMembers] = useState([])\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [premissionsList, setPremissionsList] = useState([])\r\n\r\n    useEffect(() => {\r\n        db.collection(\"movies\")\r\n            .orderBy(\"id\")\r\n            .get()\r\n            .then(snapshot => {\r\n                if (snapshot.empty) {\r\n                    axios.get(\"https://api.tvmaze.com/shows\")\r\n                        .then(resp => resp.data.map(item => {\r\n                            db.collection(\"movies\")\r\n                                .add({\r\n                                    id: item.id,\r\n                                    title: item.name,\r\n                                    Genres: item.genres,\r\n                                    Premiered: item.premiered,\r\n                                    Image: item.image.original\r\n                                })\r\n                            return resp\r\n                        }))\r\n                    console.log(\"movies data set to the  DB\")\r\n\r\n                } else {\r\n                    const ArrMovies = []\r\n                    snapshot.forEach(doc => {\r\n                        const data = doc.data()\r\n                        ArrMovies.push(data)\r\n                    })\r\n                    setMovies(ArrMovies)\r\n                    console.log(\"movies list has been updated\")\r\n\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n\r\n\r\n    }, [count])\r\n\r\n    useEffect(() => {\r\n        db.collection(\"Members\")\r\n            .orderBy(\"id\")\r\n            .get()\r\n            .then(snapshot => {\r\n                if (snapshot.empty) {\r\n                    axios.get(\"http://jsonplaceholder.typicode.com/users\")\r\n                        .then(resp => resp.data.map(item => {\r\n                            db.collection(\"Members\")\r\n                                .add({\r\n                                    id: item.id,\r\n                                    name: item.name,\r\n                                    Email: item.email,\r\n                                    City: item.address.city,\r\n                                    subscribe_movie_name: [],\r\n                                })\r\n                            return resp\r\n                        }))\r\n                } else {\r\n                    const membersArr = []\r\n                    snapshot.forEach(doc => {\r\n                        membersArr.push(doc.data())\r\n                    })\r\n                    serMembers(membersArr)\r\n                    console.log(\"members list has been updated is State\")\r\n\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    }, [countSub])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        db.collection(\"Permissons\")\r\n            .get()\r\n            .then(snapshotPremissions => {\r\n                if (snapshotPremissions.empty) {\r\n                    db.collection(\"Permissons\")\r\n                        .add({\r\n                            view_subs: \"View Subscriptions\",\r\n                            create_subs: \"Create Subscriptions\",\r\n                            delete_subs: \"Delete Subscriptions\",\r\n                            update_subs: \"Update Subscriptions\",\r\n                            view_movies: \"View movies\",\r\n                            create_movies: \"Create movies\",\r\n                            delete_movies: \"Delete movies\",\r\n                            update_movies: \"Update movies\"\r\n                        })\r\n                    console.log(\"Permissons Update in DB\")\r\n                }\r\n            }).catch(err => console.log(err))\r\n        console.log(\"Permissons already in DB\")\r\n\r\n\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        const preData = db.collection(\"Permissons\")\r\n        const snapshotPre = await preData.get()\r\n        const data = []\r\n        snapshotPre.forEach(doc => {\r\n            data.push(doc.data())\r\n        })\r\n        setPremissionsList(data)\r\n        console.log(\"Permissons Update is State\")\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n        const usersRef = db.collection('users').orderBy(\"id\");\r\n        const snapshot = await usersRef.get();\r\n        const data = []\r\n        snapshot.forEach(doc => {\r\n            const UID = doc.data()\r\n            UID.doc = doc.id\r\n            data.push(UID);\r\n\r\n\r\n        });\r\n        setUsers(data)\r\n\r\n    }, [countUser])\r\n\r\n\r\n    const value = { premissionsList, movies, setMovies, count, setCount, members, serMembers, users, setUsers, countSub, setCountSub,countUser,setCountUser }\r\n    return (\r\n        <CounterContext.Provider value={value}>\r\n\r\n            {children}\r\n\r\n        </CounterContext.Provider>\r\n    )\r\n}","C:\\Users\\yanir\\Desktop\\PROJECTS\\React.jsWithFireBase\\myapp\\src\\firebase.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":12},{"ruleId":"182","severity":1,"message":"186","line":13,"column":10,"nodeType":"184","messageId":"185","endLine":13,"endColumn":15},{"ruleId":"182","severity":1,"message":"187","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":15},{"ruleId":"182","severity":1,"message":"188","line":11,"column":22,"nodeType":"184","messageId":"185","endLine":11,"endColumn":35},{"ruleId":"182","severity":1,"message":"189","line":12,"column":22,"nodeType":"184","messageId":"185","endLine":12,"endColumn":35},{"ruleId":"182","severity":1,"message":"190","line":13,"column":22,"nodeType":"184","messageId":"185","endLine":13,"endColumn":35},{"ruleId":"191","severity":1,"message":"192","line":37,"column":5,"nodeType":"193","messageId":"194","endLine":48,"endColumn":6},{"ruleId":"195","severity":1,"message":"196","line":40,"column":22,"nodeType":"197","messageId":"198","endLine":40,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":45,"column":39,"nodeType":"201","messageId":"202","endLine":45,"endColumn":68},{"ruleId":"203","severity":1,"message":"204","line":76,"column":9,"nodeType":"184","messageId":"205","endLine":76,"endColumn":13},{"ruleId":"206","severity":1,"message":"207","line":86,"column":25,"nodeType":"208","messageId":"209","endLine":86,"endColumn":27},{"ruleId":"206","severity":1,"message":"207","line":89,"column":23,"nodeType":"208","messageId":"209","endLine":89,"endColumn":25},{"ruleId":"195","severity":1,"message":"210","line":154,"column":38,"nodeType":"197","messageId":"211","endLine":154,"endColumn":40},{"ruleId":"195","severity":1,"message":"210","line":177,"column":67,"nodeType":"197","messageId":"211","endLine":177,"endColumn":69},{"ruleId":"206","severity":1,"message":"207","line":178,"column":43,"nodeType":"208","messageId":"209","endLine":178,"endColumn":45},{"ruleId":"212","severity":1,"message":"213","line":30,"column":8,"nodeType":"214","endLine":30,"endColumn":10,"suggestions":"215"},{"ruleId":"206","severity":1,"message":"207","line":34,"column":25,"nodeType":"208","messageId":"209","endLine":34,"endColumn":27},{"ruleId":"212","severity":1,"message":"216","line":43,"column":8,"nodeType":"214","endLine":43,"endColumn":21,"suggestions":"217"},{"ruleId":"206","severity":1,"message":"207","line":46,"column":25,"nodeType":"208","messageId":"209","endLine":46,"endColumn":27},{"ruleId":"212","severity":1,"message":"216","line":55,"column":8,"nodeType":"214","endLine":55,"endColumn":21,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":310,"column":29,"nodeType":"221","endLine":310,"endColumn":79},{"ruleId":"219","severity":1,"message":"220","line":314,"column":29,"nodeType":"221","endLine":314,"endColumn":80},{"ruleId":"182","severity":1,"message":"222","line":12,"column":10,"nodeType":"184","messageId":"185","endLine":12,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":16,"column":8,"nodeType":"214","endLine":16,"endColumn":10,"suggestions":"223"},{"ruleId":"182","severity":1,"message":"224","line":1,"column":38,"nodeType":"184","messageId":"185","endLine":1,"endColumn":48},{"ruleId":"182","severity":1,"message":"225","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},{"ruleId":"182","severity":1,"message":"226","line":2,"column":16,"nodeType":"184","messageId":"185","endLine":2,"endColumn":22},{"ruleId":"182","severity":1,"message":"227","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":24},{"ruleId":"182","severity":1,"message":"228","line":10,"column":10,"nodeType":"184","messageId":"185","endLine":10,"endColumn":22},{"ruleId":"182","severity":1,"message":"229","line":10,"column":24,"nodeType":"184","messageId":"185","endLine":10,"endColumn":39},{"ruleId":"182","severity":1,"message":"230","line":11,"column":10,"nodeType":"184","messageId":"185","endLine":11,"endColumn":17},{"ruleId":"182","severity":1,"message":"231","line":11,"column":19,"nodeType":"184","messageId":"185","endLine":11,"endColumn":29},{"ruleId":"182","severity":1,"message":"232","line":12,"column":10,"nodeType":"184","messageId":"185","endLine":12,"endColumn":19},{"ruleId":"182","severity":1,"message":"233","line":12,"column":21,"nodeType":"184","messageId":"185","endLine":12,"endColumn":33},{"ruleId":"182","severity":1,"message":"234","line":15,"column":10,"nodeType":"184","messageId":"185","endLine":15,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":26,"column":21,"nodeType":"208","messageId":"209","endLine":26,"endColumn":23},{"ruleId":"212","severity":1,"message":"235","line":32,"column":6,"nodeType":"214","endLine":32,"endColumn":8,"suggestions":"236"},{"ruleId":"212","severity":1,"message":"213","line":19,"column":8,"nodeType":"214","endLine":19,"endColumn":10,"suggestions":"237"},{"ruleId":"219","severity":1,"message":"220","line":92,"column":41,"nodeType":"221","endLine":92,"endColumn":117},{"ruleId":"219","severity":1,"message":"220","line":96,"column":41,"nodeType":"221","endLine":96,"endColumn":107},{"ruleId":"212","severity":1,"message":"238","line":24,"column":15,"nodeType":"197","endLine":44,"endColumn":6},{"ruleId":"206","severity":1,"message":"207","line":29,"column":25,"nodeType":"208","messageId":"209","endLine":29,"endColumn":27},{"ruleId":"212","severity":1,"message":"239","line":44,"column":8,"nodeType":"214","endLine":44,"endColumn":10,"suggestions":"240"},{"ruleId":"182","severity":1,"message":"241","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"242","line":11,"column":12,"nodeType":"184","messageId":"185","endLine":11,"endColumn":18},{"ruleId":"182","severity":1,"message":"243","line":11,"column":20,"nodeType":"184","messageId":"185","endLine":11,"endColumn":29},{"ruleId":"182","severity":1,"message":"244","line":12,"column":12,"nodeType":"184","messageId":"185","endLine":12,"endColumn":19},{"ruleId":"182","severity":1,"message":"245","line":12,"column":21,"nodeType":"184","messageId":"185","endLine":12,"endColumn":31},{"ruleId":"182","severity":1,"message":"246","line":13,"column":12,"nodeType":"184","messageId":"185","endLine":13,"endColumn":18},{"ruleId":"182","severity":1,"message":"247","line":13,"column":20,"nodeType":"184","messageId":"185","endLine":13,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":65,"column":41,"nodeType":"201","messageId":"202","endLine":65,"endColumn":70},{"ruleId":"248","severity":1,"message":"249","line":77,"column":96,"nodeType":"250","endLine":77,"endColumn":126},{"ruleId":"219","severity":1,"message":"220","line":110,"column":45,"nodeType":"221","endLine":110,"endColumn":108},{"ruleId":"219","severity":1,"message":"220","line":117,"column":45,"nodeType":"221","endLine":117,"endColumn":111},{"ruleId":"219","severity":1,"message":"220","line":121,"column":45,"nodeType":"221","endLine":121,"endColumn":113},{"ruleId":"206","severity":1,"message":"207","line":24,"column":24,"nodeType":"208","messageId":"209","endLine":24,"endColumn":26},{"ruleId":"212","severity":1,"message":"251","line":36,"column":8,"nodeType":"214","endLine":36,"endColumn":10,"suggestions":"252"},{"ruleId":"212","severity":1,"message":"238","line":37,"column":15,"nodeType":"197","endLine":45,"endColumn":6},{"ruleId":"206","severity":1,"message":"207","line":41,"column":31,"nodeType":"208","messageId":"209","endLine":41,"endColumn":33},{"ruleId":"212","severity":1,"message":"238","line":20,"column":15,"nodeType":"197","endLine":22,"endColumn":6},{"ruleId":"212","severity":1,"message":"253","line":22,"column":8,"nodeType":"214","endLine":22,"endColumn":10,"suggestions":"254"},{"ruleId":"182","severity":1,"message":"255","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"238","line":19,"column":15,"nodeType":"197","endLine":21,"endColumn":6},{"ruleId":"212","severity":1,"message":"256","line":21,"column":8,"nodeType":"214","endLine":21,"endColumn":10,"suggestions":"257"},{"ruleId":"182","severity":1,"message":"255","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":24,"column":24,"nodeType":"208","messageId":"209","endLine":24,"endColumn":26},{"ruleId":"212","severity":1,"message":"258","line":36,"column":8,"nodeType":"214","endLine":36,"endColumn":10,"suggestions":"259"},{"ruleId":"212","severity":1,"message":"238","line":37,"column":15,"nodeType":"197","endLine":45,"endColumn":6},{"ruleId":"206","severity":1,"message":"207","line":41,"column":31,"nodeType":"208","messageId":"209","endLine":41,"endColumn":33},{"ruleId":"182","severity":1,"message":"187","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":15},{"ruleId":"182","severity":1,"message":"260","line":10,"column":12,"nodeType":"184","messageId":"185","endLine":10,"endColumn":17},{"ruleId":"182","severity":1,"message":"261","line":11,"column":12,"nodeType":"184","messageId":"185","endLine":11,"endColumn":21},{"ruleId":"182","severity":1,"message":"262","line":12,"column":12,"nodeType":"184","messageId":"185","endLine":12,"endColumn":18},{"ruleId":"182","severity":1,"message":"263","line":13,"column":12,"nodeType":"184","messageId":"185","endLine":13,"endColumn":17},{"ruleId":"182","severity":1,"message":"264","line":15,"column":12,"nodeType":"184","messageId":"185","endLine":15,"endColumn":15},{"ruleId":"182","severity":1,"message":"265","line":15,"column":17,"nodeType":"184","messageId":"185","endLine":15,"endColumn":23},{"ruleId":"182","severity":1,"message":"266","line":16,"column":21,"nodeType":"184","messageId":"185","endLine":16,"endColumn":29},{"ruleId":"182","severity":1,"message":"267","line":16,"column":31,"nodeType":"184","messageId":"185","endLine":16,"endColumn":36},{"ruleId":"206","severity":1,"message":"207","line":24,"column":24,"nodeType":"208","messageId":"209","endLine":24,"endColumn":26},{"ruleId":"212","severity":1,"message":"251","line":36,"column":8,"nodeType":"214","endLine":36,"endColumn":10,"suggestions":"268"},{"ruleId":"212","severity":1,"message":"238","line":111,"column":15,"nodeType":"197","endLine":121,"endColumn":6},{"ruleId":"212","severity":1,"message":"238","line":125,"column":15,"nodeType":"197","endLine":138,"endColumn":6},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","'Badge' is defined but never used.","'setFlagDelete' is assigned a value but never used.","'setFlagUpdate' is assigned a value but never used.","'setFlagCreate' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-self-assign","'sessionStorage[\"premissions\"]' is assigned to itself.","MemberExpression","selfAssignment","no-redeclare","'date' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.email' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["271"],"React Hook useEffect has a missing dependency: 'premissions'. Either include it or remove the dependency array.",["272"],["273"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'currentUser' is assigned a value but never used.",["274"],"'useContext' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'CounterContext' is defined but never used.","'usermgmtView' is assigned a value but never used.","'setUsermgmtView' is assigned a value but never used.","'subview' is assigned a value but never used.","'setSubview' is assigned a value but never used.","'movieView' is assigned a value but never used.","'setMovieView' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'counter', 'email', and 'users'. Either include them or remove the dependency array. You can also do a functional update 'setCounter(c => ...)' if you only need 'counter' in the 'setCounter' call.",["275"],["276"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["277"],"'useEffect' is defined but never used.","'addSub' is assigned a value but never used.","'setAddSub' is assigned a value but never used.","'editSub' is assigned a value but never used.","'setEditSub' is assigned a value but never used.","'delSub' is assigned a value but never used.","'setDelSub' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.",["278"],"React Hook useEffect has a missing dependency: 'movies.length'. Either include it or remove the dependency array.",["279"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'members.length'. Either include it or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'members'. Either include it or remove the dependency array.",["281"],"'title' is assigned a value but never used.","'Premiered' is assigned a value but never used.","'Genres' is assigned a value but never used.","'Image' is assigned a value but never used.","'uid' is assigned a value but never used.","'setUid' is assigned a value but never used.","'setCount' is assigned a value but never used.","'count' is assigned a value but never used.",["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"283","fix":"289"},{"desc":"290","fix":"291"},{"desc":"283","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"295","fix":"303"},"Update the dependencies array to be: [currentUser.email, history]",{"range":"304","text":"305"},"Update the dependencies array to be: [premissions, viewMovAuto]",{"range":"306","text":"307"},"Update the dependencies array to be: [premissions, viewSubAuto]",{"range":"308","text":"309"},{"range":"310","text":"305"},"Update the dependencies array to be: [counter, email, users]",{"range":"311","text":"312"},{"range":"313","text":"305"},"Update the dependencies array to be: [users]",{"range":"314","text":"315"},"Update the dependencies array to be: [movies]",{"range":"316","text":"317"},"Update the dependencies array to be: [movies.length]",{"range":"318","text":"319"},"Update the dependencies array to be: [members.length]",{"range":"320","text":"321"},"Update the dependencies array to be: [members]",{"range":"322","text":"323"},{"range":"324","text":"317"},[1082,1084],"[currentUser.email, history]",[1294,1307],"[premissions, viewMovAuto]",[1522,1535],"[premissions, viewSubAuto]",[473,475],[1105,1107],"[counter, email, users]",[639,641],[1431,1433],"[users]",[1171,1173],"[movies]",[758,760],"[movies.length]",[713,715],"[members.length]",[1078,1080],"[members]",[1188,1190]]